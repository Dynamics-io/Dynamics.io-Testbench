; ModuleID = 'test_cl_spv.cl'
source_filename = "test_cl_spv.cl"
target datalayout = "e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024"
target triple = "spir-unknown-unknown"

; Function Attrs: convergent norecurse nounwind
define dso_local spir_kernel void @work(ptr addrspace(1) align 4 %ptr) #0 !kernel_arg_addr_space !3 !kernel_arg_access_qual !4 !kernel_arg_type !5 !kernel_arg_base_type !5 !kernel_arg_type_qual !6 {
entry:
  %ptr.addr = alloca ptr addrspace(1), align 4
  %id = alloca i32, align 4
  store ptr addrspace(1) %ptr, ptr %ptr.addr, align 4
  %call = call spir_func i32 @_Z13get_global_idj(i32 0) #2
  store i32 %call, ptr %id, align 4
  %0 = load ptr addrspace(1), ptr %ptr.addr, align 4
  %1 = load i32, ptr %id, align 4
  %arrayidx = getelementptr inbounds i32, ptr addrspace(1) %0, i32 %1
  store i32 7, ptr addrspace(1) %arrayidx, align 4
  ret void
}

; Function Attrs: convergent nounwind willreturn memory(none)
declare spir_func i32 @_Z13get_global_idj(i32) #1

attributes #0 = { convergent norecurse nounwind "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="0" "stackrealign" "uniform-work-group-size"="true" }
attributes #1 = { convergent nounwind willreturn memory(none) "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="0" "stackrealign" }
attributes #2 = { convergent nobuiltin nounwind willreturn memory(none) "no-builtins" }

!llvm.module.flags = !{!0}
!opencl.ocl.version = !{!1}
!opencl.spir.version = !{!1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 1, i32 2}
!2 = !{!"clang version 17.0.0 (https://github.com/llvm/llvm-project fc78ebad051ac3e7564efc1a38a5e1faa8f30bf1)"}
!3 = !{i32 1}
!4 = !{!"none"}
!5 = !{!"int*"}
!6 = !{!""}
